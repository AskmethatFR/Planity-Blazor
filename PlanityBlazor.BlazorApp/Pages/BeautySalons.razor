@page "/BeautySalons"
@using Fluxor
@using PlanityBlazor.BlazorApp.BeautySalonContext
@using PlanityBlazor.BlazorApp.BeautySalonContext.GetBeautySalonsQuery
@using PlanityBlazor.BlazorApp.Shared.Reactive
@using PlanityBlazor.BlazorApp.Components

@inject IDispatcher Dispatcher
@inject AppSelector<MyState, BeautySalonsViewModel> AppSelector
@implements IDisposable

<h3>BeautySalons</h3>
<BeautySalonListComponent ViewModel="_viewModel" />

<button @onclick="() => { Dispatcher.Dispatch(new GetSalonsAction()); }">Reload</button>

@code {

    private BeautySalonsViewModel _viewModel = new BeautySalonsViewModel();
    private IDisposable _subscription;
    protected override async Task OnInitializedAsync()
    {
        _subscription = AppSelector.Subscribe(OnNext());
        Dispatcher.Dispatch(new GetSalonsAction());
    }

    private Action<BeautySalonsViewModel> OnNext()
    {
        return state =>
        {
            _viewModel = state;
            StateHasChanged();
        };
    }

    protected virtual void Dispose(bool disposing)
    {
        if (disposing)
        {
            _subscription.Dispose();
        }
    }

    public void Dispose()
    {
        Dispose(true);
        GC.SuppressFinalize(this);
    }

}
